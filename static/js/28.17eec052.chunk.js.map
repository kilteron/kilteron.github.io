{"version":3,"sources":["Awesome/KitsList.tsx"],"names":["KitsList","wheelDirection","useWheelDirection","topTranformerTrigger","useTopTranformerTrigger","store","useLocalForage","useState","awesome","setAwesome","awesomeRef","useRef","history","useHistory","useGetDocFromLocalForage","localData","localLoading","useFetch","data","loading","setedUpBookmarks","storeBookmarksToServer","useStoreBookmarksToServer","useSignInModal","useFireBaseAuth","useGetRemoteBookmarksStat","remoteBookmarksStat","classes","makeStyles","theme","action","marginRight","marginLeft","marginTop","color","palette","text","secondary","root","padding","root2","paddingTop","paddingBottom","avatar","alignSelf","useStyles","useLayoutEffect","reset","setDirection","useEffect","collection","Object","keys","length","addLocalBokmarks","current","bookmarks","clone","entries","map","v","url","replace","topAppBarData","title","type","maxWidth","style","paddingLeft","paddingRight","display","flexDirection","container","direction","justify","alignItems","spacing","k","item","className","id","variant","lineHeight","titleTypographyProps","undefined","logo","cursor","src","onClick","push","source","window","open","author","description","justifyContent","cards","fontSize"],"mappings":"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","file":"static/js/28.17eec052.chunk.js","sourcesContent":["import { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport { useHistory } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport { TopAppBar } from \"./Navigation/TopAppBar\";\nimport { TopTabsMenu } from \"../General/Navigation/TopTabsMenu\";\n//const worker = new Worker(\"/thread.worker.js\");\nimport { useLocalForage } from \"../DataSource/localForageContext\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { HorizontalCenterIconAndText } from \"../General/Cards/HorizontalCenterIconAndText\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport moment from \"moment\";\nimport Container from \"@material-ui/core/Container\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport { useFetch } from \"../DataSource/useFetch\";\nimport { CollectionLoader } from \"../Loader/collection\";\n\nimport { useTopTranformerTrigger } from \"../General/Context/TopTranformerTriggerContext\";\nimport { useWheelDirection } from \"../General/Context/WheelDirectionContext\";\nimport { TopTabsMenuSkeleton } from \"../General/TopTabsMenuSkeleton\";\nimport { useStoreBookmarksToServer } from \"../DataSource/Context/StoreBookmarksToServer\";\nimport { BookmarkButton } from \"./BookmarkButton\";\nimport { useGetDocFromLocalForage } from \"../DataSource/getLocalBookmarks\";\nimport { bookmarksInterface } from \"./bookmarksInterface\";\nimport { addLocalBokmarks } from \"./addLocalBokmarks\";\nimport { useGetRemoteBookmarksStat } from \"../DataSource/getRemoteBookmarksStat\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { useSignInModal } from \"../General/Context/SignInModal\";\nimport { useFireBaseAuth } from \"../General/Autorization/Context/FireBase\";\n\ninterface localBookmarksInterface {\n  [key: string]: {\n    b?: string;\n  };\n}\nexport default function KitsList() {\n  \n  const wheelDirection = useWheelDirection();\n  const topTranformerTrigger = useTopTranformerTrigger();\n  const store = useLocalForage();\n  const [awesome, setAwesome] = useState<bookmarksInterface>({});\n  const awesomeRef = useRef<bookmarksInterface>({});\n  const history = useHistory();\n  const [localData, localLoading] = useGetDocFromLocalForage(\"doc\");\n  const [data, loading] = useFetch(\"/kits.json\");\n  const [setedUpBookmarks, setUpBookmarks] = useState(false);\n  const storeBookmarksToServer = useStoreBookmarksToServer();\n  const modal = useSignInModal();\n  const fireBaseAuth = useFireBaseAuth();\n\n  \n  const [\n    remoteBookmarksStat,\n    remoteBookmarksStatLoading,\n  ] = useGetRemoteBookmarksStat();\n\n  const useStyles = makeStyles((theme) => ({\n    action: {\n      marginRight: 0,\n      marginLeft: 16,\n      marginTop: 4,\n      color: theme.palette.text.secondary,\n    },\n    root: {\n      padding: 16,\n    },\n    root2: {\n      paddingTop: 0,\n      paddingBottom: 0,\n    },\n    avatar: {\n      alignSelf: \"start\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  useLayoutEffect(() => {\n    topTranformerTrigger.reset();\n    wheelDirection.setDirection(\"down\");\n  }, []);\n\n  useEffect(() => {\n    if (localLoading) {\n      return;\n    }\n    \n    let collection: bookmarksInterface = {};\n    if (Object.keys(data).length > 0) {\n      collection = data;\n      addLocalBokmarks(localData, collection);\n      \n      setAwesome(collection);\n      awesomeRef.current = collection;\n    }\n  }, [data, store.bookmarks, localLoading]);\n\n  useEffect(() => {\n    \n    if (\n      !remoteBookmarksStat ||\n      awesome === null ||\n      Object.keys(awesome).length === 0\n    ) {\n      return;\n    }\n    let clone = { ...awesome };\n    \n    Object.entries(clone).map(([k, v]) => {\n      let url = v.url;\n      url = url?.replace(/[~\\*\\/\\[\\]]/g, \"#\");\n      \n      v.bookmarks = remoteBookmarksStat[url!] ?? 0;\n    });\n    \n\n    setAwesome(clone);\n  }, [remoteBookmarksStat, localData, setedUpBookmarks, awesomeRef.current]);\n\n  useEffect(() => {\n    /* if (!storeBookmarksToServer.action) return;\n\n    \n    let clone = { ...awesome };\n    Object.entries(clone).map(([k, v]) => {\n      let url = v.url;\n      if (storeBookmarksToServer.collection !== url) {\n        return;\n      }\n\n      if (storeBookmarksToServer.action === \"store\") {\n        v.bookmarks = v.bookmarks + 1;\n      } else if (storeBookmarksToServer.action === \"remove\") {\n        v.bookmarks = v.bookmarks - 1;\n      }\n    });\n    \n\n    setAwesome(clone);\n    awesomeRef.current = clone; */\n  }, [storeBookmarksToServer]);\n\n  if (loading) {\n    return (\n      <>\n        <TopAppBar />\n        <TopTabsMenuSkeleton />\n        <CollectionLoader />\n      </>\n    );\n  }\n  \n\n  return (\n    <>\n      <TopAppBar topAppBarData={{ title: \"Browse\", type: \"kitList\" }} />\n      <Container\n        maxWidth=\"sm\"\n        style={{\n          paddingLeft: 8,\n          paddingRight: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          marginTop: 10,\n        }}\n      >\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"flex-start\"\n          alignItems=\"stretch\"\n          spacing={1}\n        >\n          {Object.entries(awesome).map(\n            ([k, v]): JSX.Element => (\n              <Grid key={k} item>\n                <Card className=\"card\" id={\"card-\" + k} variant=\"outlined\">\n                  <Box lineHeight=\"normal\">\n                    <CardHeader\n                      classes={{\n                        action: classes.action,\n                        avatar: classes.avatar,\n                      }}\n                      titleTypographyProps={{ variant: \"h6\" }}\n                      avatar={\n                        undefined !== v.logo && (\n                          <Avatar\n                            style={{ cursor: \"pointer\" }}\n                            src={v.logo}\n                            onClick={() => history.push(v.url!)}\n                          ></Avatar>\n                        )\n                      }\n                      action={\n                        undefined !== v.source && (\n                          <HorizontalCenterIconAndText>\n                            <>\n                              <span\n                                style={{ cursor: \"pointer\" }}\n                                onClick={() => window.open(v.source, \"_blank\")}\n                              >\n                                {v.author}\n                              </span>\n                            </>\n                          </HorizontalCenterIconAndText>\n                        )\n                      }\n                      title={\n                        <>\n                          <HorizontalCenterIconAndText>\n                            <span\n                              id={\"kit-\" + k}\n                              style={{\n                                lineHeight: \"normal\",\n                                cursor: \"pointer\",\n                              }}\n                              onClick={() => history.push(v.url!)}\n                            >\n                              {v.title}\n                            </span>\n                          </HorizontalCenterIconAndText>\n                        </>\n                      }\n                    />\n                  </Box>\n                  <CardContent\n                    classes={{ root: classes.root2 }}\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => history.push(v.url!)}\n                  >\n                    <>{v.description}</>\n                  </CardContent>\n                  <CardActions classes={{ root: classes.root }}>\n                    <>\n                      <Grid\n                        container\n                        justify=\"space-between\"\n                        style={{\n                          justifyContent: \"space-between\",\n                          alignItems: \"flex-end\",\n                        }}\n                      >\n                        <>\n                          <Grid item>\n                            <Grid container>\n                              {undefined !== v.cards && (\n                                <HorizontalCenterIconAndText>\n                                  <StorageIcon\n                                    style={{\n                                      fontSize: 25,\n                                      paddingRight: 5,\n                                    }}\n                                  />\n                                  {v.cards}\n                                </HorizontalCenterIconAndText>\n                              )}\n                            </Grid>\n                          </Grid>\n                        </>\n                      </Grid>\n                    </>\n                  </CardActions>\n                </Card>\n              </Grid>\n            )\n          )}\n        </Grid>\n      </Container>\n    </>\n  );\n}\n"],"sourceRoot":""}