{"version":3,"sources":["Awesome/Cards/Service/addIntersectionsWithLocal.tsx","Awesome/MyLinearProgress.tsx","Awesome/MyReactPlayer.tsx","Awesome/TimeLine.tsx","Awesome/YoutubeVideo.tsx","Awesome/Cards/CardList.js","Awesome/Navigation/topTitleLists.js","Awesome/Navigation/TopTitleListsAppBar.js","Awesome/CardsCollection.tsx","Awesome/Selector.tsx"],"names":["addIntersectionsWithLocal_","collection","localUserCollection","stackOfIds","undefined","Object","entries","forEach","collectionValue","localK","localUserCollectionValue","newStackOfIds","Array","prototype","push","apply","title","id","children","existsLocal","stackOfLocalIds","addIntersectionsWithLocal","localData","collectionId","MyLinearProgress","setShowVideoProgressBar","showVideoProgressBar","videoProgressBarContext","useVideoProgressBar","LinearProgress","color","variant","value","progress","onMouseOver","onMouseOut","style","width","display","MyReactPlayer","youtubeId","listCardsWithCategories","currentCardIndex","setExistsLocalSeenInArray","currentCardIndexUpdateTime","setCurrentCardAndTitleOnBigVideo","playing","onPause","onReady","player","timeLineRefList","console","log","store","useLocalForage","showSignInBar","useShowSignInBar","storeUserCollectionToServer","useStoreUserCollectionToServer","cardsNumberInUserCollection","useCardsNumberInUserCollection","fireBaseAuth","useFireBaseAuth","windowWidth","useWindowWidth","useState","seekTo","useRef","play","setPlay","showLoop","setShowLoop","useEffect","settings","getItem","then","status","playerHeight","onProgress","useCallback","e","current","card","seen","playedSeconds","stop","prev","handleAddCard","catData","stackOfTitles","currentcardIndex_","findIndex","cardsWithCategories","start","Number","Date","currentCardId","scrollIntoView","behavior","block","inline","videoDutation","set","seekTo_","leftMenuSize","Grid","container","justify","justifyContent","alignItems","flexWrap","height","maxWidth","url","controls","progressInterval","TimeLine","handlePlayerSeekTo","cardListForSelectDesktop","currentCardAndTitleOnBigVideo","existsLocalSavedInArray_","setExistsLocalSavedInArray_","existsLocalSeenInArray","theme","useTheme","existsLocalSavedInArray","setExistsLocalSavedInArray","removeExistsLocalInArray","cardId","clone","index","splice","addExistsLocalInArray","useStyles","makeStyles","root","backgroundColor","overflow","maxHeight","position","formControl","marginTop","spacing","marginBottom","select","background","palette","default","textDecoration","paddingRight","textOverflow","navigationBbColor","type","paper","classes","List","className","subheader","map","data","paddingLeft","length","ListSubheader","fontSize","fontWeight","find","ListItem","button","onClick","selected","ref","r","marginRight","ListItemText","primary","CardBottomRight","newStackOfTitles","flexGrow","minWidth","YoutubeVideo","props","useParams","user","kit","setPlayer","setPlaying","openDrawer","setOpenDrawer","cardListForSelect","setedUp","setup","topAppBarData","setTopAppBarData","useGetDocFromLocalForage","localLoading","useFetch","dataKit","loadingKit","urlStackOfTitles","setUrlStackOfTitles","setStackOfLocalIds","componentSizes","useComponentSizes","hashInInitialUrl","useHashInInitialUrl","hashChange","useHashChange","findStackOfIdsForCardsCollection","k","v","newLocalStackOfIds","slice","xxx","setHash","reset","getLocalIds","listOfSavedIds","listOfSeenIds","saved","keys","stackOfLocalIds_","navigationToUrlStackOfTitles","navigation","cats","listCardsWithCategories_","getCategoriesService","localIndxedColection","listOfSavedIds_","listOfSeenIds_","cardListForSelect_","cardListForSelectDesktop_","GenerateCardList2","cards","createdAt","logo","author","source","bookmarks","description","elem","TopAppBar","TopTabsMenuSkeleton","playerDivHeight","topAppBarHeight","topSignInAppBarHeight","flexDirection","SwipeableDrawer","anchor","open","onClose","onOpen","role","CardList","join","direction","item","GeneralCard","delCardHandler","categoryTitle","collectionName","TopTitleLists","generalTitle","SelectBoxWithCategories","generalTitleIds","userCollection","kitCats","TopTitleListsAppBar","useTopTitleListsAppBarObserver","visibleChunks","chunkRefs","React","invisible","setInvisible","cardsNumberCurrent","drawerWithMenu","useDrawerWithMenu","Set","MoveOnScrollAppBar","Container","overflowX","Badge","show","newCardList","CardsCollection","anchorRefs","setKitCats","useReducer","p","useGetCollectionChunkHeight","localCollectionChunkHeight","localCollectionChunkHeightLoading","chunks","setChunks","titleToChunkMathing","isObserverSetedUp","topTitleListsAppBarHeight","scrollMargin","setScrollMargin","listCards","localInxedColection","generateChunks","chunks_","titleToChunkMathing_","selectMaxWidth","useChunksFromObserver","chunksForRender","scrollTo","useScrollTo","cardList","NAV_BAR_HEIGHT","SkeletonLoaderForHashNavigation","chunk_","key","Selector"],"mappings":"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","file":"static/js/29.17650d7b.chunk.js","sourcesContent":["import  IDataJson  from \"../../../General/Interfaces/IDataJson\";\n\nconst addIntersectionsWithLocal_ = (\n  collection: IDataJson[],\n  localUserCollection: IDataJson[],\n  stackOfIds: any[]\n) => {\n  \n  if (undefined !== collection && localUserCollection) {\n    Object.entries(collection).forEach(([externalK, collectionValue]) => {\n      Object.entries(localUserCollection).forEach(\n        ([localK, localUserCollectionValue]) => {\n          let newStackOfIds: any[] = [];\n          Array.prototype.push.apply(newStackOfIds, stackOfIds);\n          Array.prototype.push.apply(newStackOfIds, [localK]);\n\n          if (\n            null !== localUserCollectionValue &&\n            null !== collectionValue &&\n            undefined !== collectionValue.title &&\n            collectionValue.title === localUserCollectionValue.title &&\n            undefined === collectionValue.id\n          ) {\n            addIntersectionsWithLocal_(\n              collectionValue.children,\n              localUserCollectionValue.children,\n              newStackOfIds\n            );\n          } else if (\n            null !== collectionValue &&\n            null !== localUserCollectionValue &&\n            undefined !== collectionValue.title &&\n            collectionValue.id === localUserCollectionValue.id\n          ) {\n            collectionValue.existsLocal = true;\n            collectionValue.stackOfLocalIds = stackOfIds;\n            \n          }\n        }\n      );\n    });\n  }\n};\n\nexport const addIntersectionsWithLocal = (\n  collection: IDataJson[],\n  localData: IDataJson[],\n  collectionId: any\n) => {\n  let localUserCollection = [];\n  if (localData) {\n    localUserCollection = localData; \n    addIntersectionsWithLocal_(collection, localUserCollection, []);\n    \n  }\n};\n","import LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { useState } from \"react\";\nimport { useVideoProgressBar } from \"./Context/VideoProgressBarContext\";\n\ninterface Props {\n  setShowVideoProgressBar: any;\n  showVideoProgressBar: any;\n}\n\nexport const MyLinearProgress: React.FC<Props> = ({\n  setShowVideoProgressBar,\n  showVideoProgressBar,\n}) => {\n  const videoProgressBarContext = useVideoProgressBar();\n  return (\n    <LinearProgress\n      color=\"secondary\"\n      variant=\"determinate\"\n      value={videoProgressBarContext.progress}\n      onMouseOver={() => {\n        setShowVideoProgressBar(true);\n      }}\n      onMouseOut={() => {\n        setShowVideoProgressBar(false);\n      }}\n      style={{\n        width: \"100%\",\n        display: showVideoProgressBar ? \"block\" : \"none\",\n      }}\n    />\n  );\n};\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { useLocalForage } from \"../DataSource/localForageContext\";\nimport { useShowSignInBar } from \"../General/Context/ShowSignInBarContext\";\nimport { handleAddCard } from \"./Cards/Service/handleAddCard\";\nimport { useStoreUserCollectionToServer } from \"../DataSource/Context/StoreUserCollectionToServer\";\nimport { useCardsNumberInUserCollection } from \"../General/Context/CardsNumberInUserCollectionContext\";\nimport { useFireBaseAuth } from \"../General/Autorization/Context/FireBase\";\nimport { useVideoProgressBar } from \"./Context/VideoProgressBarContext\";\nimport { MyLinearProgress } from \"./MyLinearProgress\";\nimport { Grid } from \"@material-ui/core\";\nimport { useWindowWidth } from \"../General/Context/WindowWidthContext\";\nimport { faTemperatureHigh } from \"@fortawesome/free-solid-svg-icons\";\ninterface Props {\n  youtubeId: any;\n  listCardsWithCategories: any;\n  currentCardIndex: any;\n  setExistsLocalSeenInArray: any;\n  currentCardIndexUpdateTime: any;\n  setCurrentCardAndTitleOnBigVideo: any;\n  playing: any;\n  onPause: any;\n  onReady: any;\n  player: any;\n  timeLineRefList: any[];\n}\n\nexport const MyReactPlayer: React.FC<Props> = ({\n  youtubeId,\n  listCardsWithCategories,\n  currentCardIndex,\n  setExistsLocalSeenInArray,\n  currentCardIndexUpdateTime,\n  setCurrentCardAndTitleOnBigVideo,\n  playing,\n  onPause,\n  onReady,\n  player,\n  timeLineRefList,\n}) => {\n  if (process.env.REACT_APP_DEBUG) console.log(\"player\", player);\n  const store = useLocalForage();\n  const showSignInBar = useShowSignInBar();\n  const storeUserCollectionToServer = useStoreUserCollectionToServer();\n  const cardsNumberInUserCollection = useCardsNumberInUserCollection();\n  const fireBaseAuth = useFireBaseAuth();\n  const videoProgressBarContext = useVideoProgressBar();\n  const windowWidth = useWindowWidth();\n  const [showVideoProgressBar, setShowVideoProgressBar] =\n    useState<boolean>(true);\n  const seekTo = useRef();\n  const [play, setPlay] = useState(playing);\n  const [showLoop, setShowLoop] = useState(false); \n\n  useEffect(() => {\n    store.settings.getItem(\"loopVideo\").then(function (status: boolean) {\n      if (process.env.REACT_APP_DEBUG) console.log(\"status\", status);\n      setShowLoop(status);\n    });\n  }, []);\n\n  const onProgress = useCallback(\n    (e: any) => {\n      if (\n        listCardsWithCategories.current[currentCardIndex.current] &&\n        !listCardsWithCategories.current[currentCardIndex.current].card.seen &&\n        e.playedSeconds >\n          listCardsWithCategories.current[currentCardIndex.current].card.stop -\n            3\n      ) {\n        if (process.env.REACT_APP_DEBUG)\n          console.log(\n            \"setExistsLocalSeenInArray\",\n            e.playedSeconds,\n            listCardsWithCategories.current[currentCardIndex.current].card\n          );\n        setExistsLocalSeenInArray((prev: any) => {\n          let clone = [\n            ...prev,\n            listCardsWithCategories.current[currentCardIndex.current].card.id,\n          ];\n          return clone;\n        });\n\n        listCardsWithCategories.current[currentCardIndex.current].card.seen =\n          true;\n\n        handleAddCard(\n          listCardsWithCategories.current[currentCardIndex.current].catData\n            .stackOfIds,\n          () => {},\n          store,\n          listCardsWithCategories.current[currentCardIndex.current].card,\n          listCardsWithCategories.current[currentCardIndex.current].card.title,\n          listCardsWithCategories.current[currentCardIndex.current].catData\n            .stackOfTitles,\n          () => {},\n          showSignInBar,\n          storeUserCollectionToServer,\n          cardsNumberInUserCollection,\n          fireBaseAuth\n        );\n      }\n\n      let currentcardIndex_ = listCardsWithCategories.current.findIndex(\n        (cardsWithCategories: any) =>\n          e.playedSeconds > cardsWithCategories.card.start &&\n          e.playedSeconds < cardsWithCategories.card.stop\n      );\n\n      if (process.env.REACT_APP_DEBUG)\n        console.log(\n          \"currentcardIndex_\",\n          currentcardIndex_,\n          Number(new Date()) - Number(currentCardIndexUpdateTime.current)\n        );\n      if (\n        currentcardIndex_ !== -1 &&\n        Number(new Date()) - Number(currentCardIndexUpdateTime.current) > 2000\n      ) {\n        let currentCardId =\n          listCardsWithCategories.current[currentcardIndex_].card.id;\n\n        setCurrentCardAndTitleOnBigVideo((prev: any) => {\n          if (process.env.REACT_APP_DEBUG) console.log(\"prev\", prev);\n          if (!prev || prev!.card.id !== currentCardId) {\n            if (process.env.REACT_APP_DEBUG)\n              console.log(\n                \"timeLineRefList.current[currentCardId]\",\n                timeLineRefList\n              );\n            if (timeLineRefList[currentCardId]) {\n              if (process.env.REACT_APP_DEBUG) console.log(\"scrollIntoView\");\n\n              timeLineRefList[currentCardId].scrollIntoView({\n                behavior: \"smooth\",\n                block: \"center\",\n                inline: \"center\",\n              });\n            }\n            return listCardsWithCategories.current[currentcardIndex_];\n          } else {\n            return prev;\n          }\n        });\n        currentCardIndex.current = currentcardIndex_;\n        currentCardIndexUpdateTime.current = new Date();\n      }\n\n      if (listCardsWithCategories.current[currentCardIndex.current]) {\n        let videoDutation =\n          listCardsWithCategories.current[currentCardIndex.current].card.stop -\n          listCardsWithCategories.current[currentCardIndex.current].card.start;\n\n        let progress =\n          ((listCardsWithCategories.current[currentCardIndex.current].card\n            .stop -\n            e.playedSeconds) /\n            videoDutation) *\n          100;\n        progress = 100 - progress;\n\n        if (progress > 0 && progress < 100) {\n          videoProgressBarContext.set(progress);\n\n          //setVideoProgressBar(progress);\n        }\n      }\n\n      if (process.env.REACT_APP_DEBUG)\n        console.log(\n          \"player.seekTo\",\n          listCardsWithCategories.current[currentCardIndex.current],\n          e.playedSeconds\n        );\n\n      if (\n        showLoop &&\n        player &&\n        listCardsWithCategories.current[currentCardIndex.current] &&\n        e.playedSeconds >=\n          listCardsWithCategories.current[currentCardIndex.current].card.stop\n      ) {\n        if (process.env.REACT_APP_DEBUG) console.log(\"player.seekTo\");\n        player.seekTo(\n          listCardsWithCategories.current[currentCardIndex.current].card.start\n        );\n        setPlay(true);\n        return;\n      }\n      if (currentCardIndex.current === -1) {\n        currentCardIndex.current = listCardsWithCategories.current.findIndex(\n          (cardsWithCategories: any) =>\n            e.playedSeconds < cardsWithCategories.card.start\n        );\n      }\n\n      if (process.env.REACT_APP_DEBUG)\n        console.log(\n          \"currentCardIndex.current\",\n          currentCardIndex.current,\n          e.playedSeconds,\n          listCardsWithCategories.current[currentCardIndex.current].card.stop\n        );\n      if (\n        currentCardIndex.current != -1 &&\n        e.playedSeconds >\n          listCardsWithCategories.current[currentCardIndex.current].card.stop &&\n        listCardsWithCategories.current[currentCardIndex.current + 1]\n      ) {\n        let seekTo_ =\n          listCardsWithCategories.current[currentCardIndex.current + 1].card\n            .start;\n        if (process.env.REACT_APP_DEBUG)\n          console.log(\n            \"seekTo?\",\n            seekTo_,\n            seekTo.current,\n            listCardsWithCategories.current[currentCardIndex.current + 1].card\n          );\n\n        if (seekTo_ !== seekTo.current) {\n          if (process.env.REACT_APP_DEBUG) console.log(\"seekTo\", seekTo_);\n          player.seekTo(seekTo_);\n          setPlay(true);\n          seekTo.current = seekTo_;\n          currentCardIndex.current = currentCardIndex.current + 1;\n        }\n      }\n    },\n    [currentCardIndex, listCardsWithCategories, player]\n  );\n  let playerHeight = (800 - 16) * 0.5625;\n  let playerMaxWidth = 800 + 16;\n  let leftMenuSize = windowWidth.width > 1024 ? 350 : 0;\n  playerHeight = (windowWidth.width - leftMenuSize) * 0.5625;\n\n  return (\n    <>\n      <Grid\n        container\n        justify=\"space-between\"\n        style={{\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          flexWrap: \"unset\",\n          height: playerHeight,\n          maxWidth: \"100%\",\n        }}\n        onMouseOut={() => {\n          setShowVideoProgressBar(false);\n        }}\n        onMouseOver={() => {\n          setShowVideoProgressBar(true);\n        }}\n      >\n        <ReactPlayer\n          url={\"https://www.youtube.com/watch?v=\" + youtubeId}\n          playing={play}\n          controls={true}\n          width=\"100%\"\n          height=\"100%\"\n          onReady={onReady}\n          onProgress={onProgress}\n          onPause={onPause}\n          progressInterval={100}\n        />\n      </Grid>\n      <MyLinearProgress\n        setShowVideoProgressBar={setShowVideoProgressBar}\n        showVideoProgressBar={showVideoProgressBar}\n      />\n    </>\n  );\n};\n","import {\n  FormControl,\n  Grid,\n  IconButton,\n  makeStyles,\n  MenuItem,\n  Select,\n  useTheme,\n} from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { CardBottomRight } from \"./Cards/CardBottom/CardBottomRight\";\nimport { useRef, useState } from \"react\";\nimport { cardAndCategoryInterface } from \"./cardAndCategoryInterface\";\n\ninterface Props {\n  handlePlayerSeekTo: any;\n  cardListForSelectDesktop: any[];\n  currentCardAndTitleOnBigVideo: any;\n  existsLocalSavedInArray_: any[];\n  setExistsLocalSavedInArray_: any;\n  timeLineRefList: any[];\n  existsLocalSeenInArray:any[];\n}\nexport const TimeLine: React.FC<Props> = ({\n  handlePlayerSeekTo,\n  cardListForSelectDesktop,\n  currentCardAndTitleOnBigVideo,\n  existsLocalSavedInArray_,\n  setExistsLocalSavedInArray_,\n  timeLineRefList,\n  existsLocalSeenInArray\n}) => {\n  const theme = useTheme();\n\n  const [existsLocalSavedInArray, setExistsLocalSavedInArray] = useState<any[]>(\n    existsLocalSavedInArray_\n  );\n  const removeExistsLocalInArray = (cardId: any) => {\n    setExistsLocalSavedInArray((prev) => {\n      let clone = [...prev];\n      let index = clone.findIndex((e) => e === cardId);\n      if (index > -1) clone.splice(index, 1);\n\n      setExistsLocalSavedInArray_(clone);\n      return clone;\n    });\n  };\n\n  const addExistsLocalInArray = (cardId: any) => {\n    setExistsLocalSavedInArray((prev) => {\n      let clone = [...prev, cardId];\n      if (process.env.REACT_APP_DEBUG)\n        console.log(\"setExistsLocalSavedInArray\", clone);\n      setExistsLocalSavedInArray_(clone);\n\n      return clone;\n    });\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      backgroundColor: \"#3a3a3a\",\n      overflow: \"auto\",\n      maxHeight: \"100%\",\n      color: \"white\",\n      maxWidth: 350,\n      position: \"relative\",\n    },\n    formControl: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    select: {\n      \"& .MuiSelect-select:focus\": {\n        background: theme.palette.background.default,\n        textDecoration: \"none\",\n      },\n      \"& .MuiSelect-select:hover\": {\n        background: theme.palette.background.default,\n        textDecoration: \"underline\",\n      },\n      \"& .MuiSelect-iconOpen\": {\n        display: \"none\",\n      },\n      \"& .MuiSelect-icon\": {\n        display: \"none\",\n      },\n\n      \"& .MuiSelect-select\": {\n        paddingRight: 0,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n      },\n    },\n  }));\n  let navigationBbColor =\n    theme.palette.type === \"dark\" ? theme.palette.background.paper : \"#3a3a3a\";\n\n  if (process.env.REACT_APP_DEBUG)\n    console.log(\"existsLocalSavedInArray\", existsLocalSavedInArray);\n  const classes = useStyles();\n  return (\n    <List className={classes.root} subheader={<li />}>\n      {\n        <>\n          {/* {currentCardIndex.current > 0 && (\n                      <div style={{ flexGrow: 0 }}>\n                        <IconButton onClick={handleBefore}>\n                          <NavigateBeforeIcon />\n                        </IconButton>\n                      </div>\n                    )} */}\n          {cardListForSelectDesktop.map((data) => {\n            return (\n              <li style={{ backgroundColor: navigationBbColor }}>\n                <ul\n                  style={{\n                    backgroundColor: navigationBbColor,\n                    paddingLeft: 0,\n                  }}\n                >\n                  {cardListForSelectDesktop.length > 1 && (\n                    <ListSubheader\n                      style={{\n                        paddingLeft: 28,\n                        color: \"white\",\n                        fontSize: \"1rem\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {data.title}\n                    </ListSubheader>\n                  )}\n                  {data.children.map((card: any) => {\n                    let seen = existsLocalSeenInArray.find((e) => e === card.id)\n                      ? true\n                      : false;\n                    return (\n                      <ListItem\n                        button\n                        onClick={() => handlePlayerSeekTo(card.id)}\n                        style={{ paddingLeft: seen ? 25 : 53 }}\n                        selected={\n                          currentCardAndTitleOnBigVideo &&\n                          currentCardAndTitleOnBigVideo!.card.id === card.id\n                        }\n                        key={card.id}\n                        ref={(r) => {\n                          return (timeLineRefList[card.id] = r);\n                        }}\n                      >\n                        {seen ? <DoneIcon style={{ marginRight: 4 }} /> : \"\"}\n                        <ListItemText primary={card.title} />\n                        <CardBottomRight\n                          existsLocal={\n                            existsLocalSavedInArray.find((e) => {\n                              if (process.env.REACT_APP_DEBUG)\n                                console.log(\n                                  \"e,card\",\n                                  e === card.id,\n                                  e,\n                                  card.id\n                                );\n                              return e === card.id;\n                            })\n                              ? true\n                              : false\n                          }\n                          title={card.title}\n                          card={card}\n                          newStackOfTitles={data.stackOfTitles}\n                          stackOfIds={data.stackOfIds}\n                          stackOfLocalIds={card.stackOfLocalIds}\n                          cardId={card.id}\n                          flexGrow={0}\n                          removeExistsLocalInArray={removeExistsLocalInArray}\n                          addExistsLocalInArray={addExistsLocalInArray}\n                          minWidth={735}\n                        />\n                      </ListItem>\n                    );\n                  })}\n                </ul>\n              </li>\n            );\n          })}\n\n          {/* {currentCardIndex.current <\n                      listCardsWithCategories.current.length - 1 && (\n                      <div style={{ flexGrow: 0 }}>\n                        <IconButton onClick={handleNext}>\n                          <NavigateNextIcon />\n                        </IconButton>\n                      </div>\n                    )} */}\n\n          {/* <CardBottomRight\n                  existsLocal={\n                    existsLocalInArray.find(\n                      (e) => e === currentCardAndTitleOnBigVideo!.card.id\n                    )\n                      ? true\n                      : false\n                  }\n                  title={currentCardAndTitleOnBigVideo!.card.title}\n                  card={currentCardAndTitleOnBigVideo!.card}\n                  newStackOfTitles={\n                    currentCardAndTitleOnBigVideo!.catData.stackOfTitles\n                  }\n                  stackOfIds={currentCardAndTitleOnBigVideo!.catData.stackOfIds}\n                  cardId={currentCardAndTitleOnBigVideo!.card.id}\n                  flexGrow={0}\n                  removeExistsLocalInArray={removeExistsLocalInArray}\n                  addExistsLocalInArray={addExistsLocalInArray}\n                  minWidth={735}\n                /> */}\n        </>\n      }\n    </List>\n  );\n};\n","import { useTheme } from \"@material-ui/core\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport \"../App.css\";\nimport { useGetDocFromLocalForage } from \"../DataSource/getLocalCollection\";\nimport { useFetch } from \"../DataSource/useFetch\";\nimport { useComponentSizes } from \"../General/Context/ComponentSizesContext\";\nimport { useHashChange } from \"../General/Context/HashChangeContext\";\nimport { useHashInInitialUrl } from \"../General/Context/HashInInitialUrlContext\";\nimport { useShowSignInBar } from \"../General/Context/ShowSignInBarContext\";\nimport { useWindowWidth } from \"../General/Context/WindowWidthContext\";\nimport { GenerateCardList2 } from \"../General/GenerateCardList2\";\nimport IDataJson from \"../General/Interfaces/IDataJson\";\nimport { TopTabsMenuSkeleton } from \"../General/TopTabsMenuSkeleton\";\nimport { CollectionLoader } from \"../Loader/collection\";\nimport { getCategoriesService } from \"../MyCollection/Categories/Service/getCategories\";\nimport \"../skeleton.css\";\nimport { cardAndCategoryInterface } from \"./cardAndCategoryInterface\";\nimport { addIntersectionsWithLocal } from \"./Cards/Service/addIntersectionsWithLocal\";\nimport { collectionHeader } from \"./collectionHeaderInterface\";\nimport { MyReactPlayer } from \"./MyReactPlayer\";\nimport { TopAppBar } from \"./Navigation/TopAppBar\";\nimport { navigationToUrlStackOfTitles } from \"./Service/navigationToUrlStackOfTitles\";\nimport { TimeLine } from \"./TimeLine\";\n\nexport default function YoutubeVideo(props: any) {\n  let { user, kit, collectionId } =\n    useParams<Record<string, string | undefined>>();\n  const [existsLocalSavedInArray, setExistsLocalSavedInArray] = useState<any[]>(\n    []\n  );\n  const [existsLocalSeenInArray, setExistsLocalSeenInArray] = useState<any[]>(\n    []\n  );\n  const [player, setPlayer] = useState<any>();\n  const [playing, setPlaying] = useState<any>(true);\n  const theme = useTheme();\n  const [openDrawer, setOpenDrawer] = useState<any>(false);\n  const cardListForSelect = useRef<any[]>([]);\n  const cardListForSelectDesktop = useRef<any[]>([]);\n  const listCardsWithCategories = useRef<any[]>([]);\n  const [setedUp, setup] = useState(false);\n  const currentCardIndex = useRef(-1);\n  const currentCardIndexUpdateTime = useRef(new Date());\n  const [currentCardAndTitleOnBigVideo, setCurrentCardAndTitleOnBigVideo] =\n    useState<cardAndCategoryInterface>();\n  const [topAppBarData, setTopAppBarData] = useState<collectionHeader>();\n  const data = props.data;\n  const [localData, localLoading] = useGetDocFromLocalForage(\"doc\");\n  const [dataKit, loadingKit] = useFetch(\"/\" + user + \"-\" + kit + \".json\");\n  const [urlStackOfTitles, setUrlStackOfTitles] = useState({});\n  const [stackOfLocalIds, setStackOfLocalIds] = useState<any[]>([]);\n\n  const showSignInBar = useShowSignInBar();\n  const componentSizes = useComponentSizes();\n  const hashInInitialUrl = useHashInInitialUrl();\n  const hashChange = useHashChange();\n  const windowWidth = useWindowWidth();\n  const timeLineRefList = useRef<any[]>([]);\n\n  const findStackOfIdsForCardsCollection = (\n    id: any,\n    localData: IDataJson[],\n    stackOfLocalIds: any[]\n  ): any => {\n    if (process.env.REACT_APP_DEBUG)\n      console.log(\n        \"findStackOfIdsForCardsCollection\",\n        id,\n        localData,\n        stackOfLocalIds\n      );\n    for (const [k, v] of localData.entries()) {\n      //Object.entries(localData).forEach(([k, v]) => {\n      if (process.env.REACT_APP_DEBUG) console.log(\"k,v\", k, v);\n      let newLocalStackOfIds: any[] = [];\n      Array.prototype.push.apply(newLocalStackOfIds, stackOfLocalIds);\n      Array.prototype.push.apply(newLocalStackOfIds, [k]);\n      if (id === v.id) {\n        if (process.env.REACT_APP_DEBUG)\n          console.log(\"id === v.id\", newLocalStackOfIds.slice(0, -1));\n        return newLocalStackOfIds.slice(0, -1);\n      } else if (v.children) {\n        let xxx = findStackOfIdsForCardsCollection(\n          id,\n          v.children,\n          newLocalStackOfIds\n        );\n        if (process.env.REACT_APP_DEBUG) console.log(\"xxx\", xxx);\n        if (xxx) {\n          return xxx;\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      hashChange.setHash(\"\");\n      hashInInitialUrl.reset();\n    };\n  }, []);\n\n  const getLocalIds = (\n    localData: IDataJson[],\n    listOfSavedIds: any[],\n    listOfSeenIds: any[]\n  ) => {\n    Object.entries(localData).forEach(([k, v]) => {\n      if (v && v.children) {\n        getLocalIds(v.children, listOfSavedIds, listOfSeenIds);\n      } else {\n        if (v.saved) listOfSavedIds.push(v.id);\n        if (v.seen) listOfSeenIds.push(v.id);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (localLoading) {\n      return;\n    }\n    if (Object.keys(dataKit).length > 0) {\n      //let stackOfLocalIds: any[] = [];\n      if (data && localData) {\n        let stackOfLocalIds_: any[] = [];\n        stackOfLocalIds_ = findStackOfIdsForCardsCollection(\n          data.id,\n          localData,\n          stackOfLocalIds_\n        );\n        if (process.env.REACT_APP_DEBUG)\n          console.log(\"stackOfLocalIds:::\", stackOfLocalIds_, data, localData);\n        setStackOfLocalIds(stackOfLocalIds_);\n      }\n\n      let urlStackOfTitles = {};\n      let stackOfTitles: any;\n      navigationToUrlStackOfTitles(\n        dataKit.navigation,\n        stackOfTitles,\n        urlStackOfTitles\n      );\n      setUrlStackOfTitles(urlStackOfTitles);\n    }\n\n    let cats: any[] = [];\n\n    let collection: any = {};\n\n    let listCards: any[] = [];\n\n    let listCardsWithCategories_: any[] = [];\n\n    if (process.env.REACT_APP_DEBUG) console.log(\"useEffect:::::\");\n    if (Object.keys(data).length > 0) {\n      collection = data;\n\n      getCategoriesService(collection.children, 0, [], cats);\n\n      addIntersectionsWithLocal(\n        collection.children,\n        localData,\n        props.collectionId\n      );\n\n      let localIndxedColection = -1;\n      if (localData) {\n        localIndxedColection = localData.findIndex(\n          (e: any) => e.title === collection.children[0].title\n        );\n      }\n      if (process.env.REACT_APP_DEBUG)\n        console.log(\n          \"localData\",\n          localData,\n          collection.children,\n          localIndxedColection\n        );\n\n      let listOfSavedIds_: any[] = [];\n      let listOfSeenIds_: any[] = [];\n      if (localData) {\n        getLocalIds(localData, listOfSavedIds_, listOfSeenIds_);\n      }\n      if (process.env.REACT_APP_DEBUG)\n        console.log(\"listOfSavedIds_\", listOfSavedIds_);\n      setExistsLocalSavedInArray(listOfSavedIds_);\n      setExistsLocalSeenInArray(listOfSeenIds_);\n\n      let cardListForSelect_: any[] = [];\n      let cardListForSelectDesktop_: any[] = [];\n      GenerateCardList2(\n        collection.children,\n        [],\n        [],\n        [],\n        listCards,\n        listCardsWithCategories_,\n        cats,\n        props.collectionId,\n        cardListForSelect_,\n        cardListForSelectDesktop_,\n        true,\n        localIndxedColection\n      );\n      cardListForSelect.current = cardListForSelect_;\n      cardListForSelectDesktop.current = cardListForSelectDesktop_;\n      if (process.env.REACT_APP_DEBUG)\n        console.log(\n          \"cardListForSelectDesktop.current\",\n          cardListForSelectDesktop.current\n        );\n\n      listCardsWithCategories.current = listCardsWithCategories_;\n\n      setup(true);\n\n      setTopAppBarData({\n        id: collection.id,\n        url: collection.url,\n        title: collection.title,\n        cards: collection.cards,\n        createdAt: collection.createdAt,\n        logo: collection.logo,\n        youtubeId: collection.youtubeId,\n        author: collection.author,\n        source: collection.source,\n        bookmarks: collection.bookmarks,\n        description: collection.description,\n      });\n    }\n  }, [data, dataKit, localData, loadingKit, localLoading, props.collectionId]);\n\n  const onPause = useCallback(() => {\n    setPlaying(false);\n  }, [\n    currentCardAndTitleOnBigVideo,\n    currentCardIndex,\n    listCardsWithCategories,\n  ]);\n\n  const handlePlayerSeekTo = (cardId: any) => {\n    let currentcardIndex_ = listCardsWithCategories.current.findIndex(\n      (elem) => elem.card.id == cardId\n    );\n    player.seekTo(\n      listCardsWithCategories.current[currentcardIndex_].card.start\n    );\n    currentCardIndex.current = currentcardIndex_;\n    currentCardIndexUpdateTime.current = new Date();\n    setCurrentCardAndTitleOnBigVideo(\n      listCardsWithCategories.current[currentCardIndex.current]\n    );\n    setPlaying(true);\n  };\n\n  const handleBefore = () => {\n    player.seekTo(\n      listCardsWithCategories.current[currentCardIndex.current - 1].card.start\n    );\n    setCurrentCardAndTitleOnBigVideo(\n      listCardsWithCategories.current[currentCardIndex.current - 1]\n    );\n    currentCardIndex.current--;\n\n    setPlaying(true);\n  };\n  const handleNext = () => {\n    player.seekTo(\n      listCardsWithCategories.current[currentCardIndex.current + 1].card.start\n    );\n\n    setCurrentCardAndTitleOnBigVideo(\n      listCardsWithCategories.current[currentCardIndex.current + 1]\n    );\n    currentCardIndex.current++;\n\n    setPlaying(true);\n  };\n\n  let selectMaxWidth = 460;\n  if (windowWidth.width <= 350) {\n    selectMaxWidth = 100;\n  } else if (windowWidth.width <= 395) {\n    selectMaxWidth = 150;\n  } else if (windowWidth.width <= 455) {\n    selectMaxWidth = 200;\n  } else if (windowWidth.width <= 500) {\n    selectMaxWidth = 250;\n  } else if (windowWidth.width <= 660) {\n    selectMaxWidth = 300;\n  }\n  useEffect(() => {}, [data]);\n  useEffect(() => {}, [localData]);\n  useEffect(() => {}, [props.collectionId]);\n  const onReady = (player: any) => {\n    //player.seekTo(card.start);\n    setPlayer(player);\n  };\n\n  if (localLoading || loadingKit || setedUp === false) {\n    return (\n      <>\n        <TopAppBar />\n        <TopTabsMenuSkeleton />\n        <CollectionLoader />\n      </>\n    );\n  }\n\n  let playerDivHeight =\n    \"calc(100% - \" +\n    (componentSizes.topAppBarHeight +\n      (showSignInBar.status === true\n        ? componentSizes.topSignInAppBarHeight\n        : 0)) +\n    \"px)\";\n\n  let navigationBbColor =\n    theme.palette.type === \"dark\" ? theme.palette.background.paper : \"#3a3a3a\";\n\n  return (\n    <>\n      <TopAppBar\n        topAppBarData={topAppBarData}\n        existsLocalSavedInArray_={existsLocalSavedInArray}\n        urlStackOfTitles={urlStackOfTitles}\n        stackOfLocalIds={stackOfLocalIds}\n      />\n      <div\n        id=\"main\"\n        style={{\n          display: \"flex\",\n          flexDirection: windowWidth.width > 1024 ? \"row\" : \"column\",\n          height: playerDivHeight,\n        }}\n      >\n        {windowWidth.width > 1024 ? (\n          <div\n            style={{\n              flexGrow: 0,\n              minWidth: 350,\n              backgroundColor: navigationBbColor,\n            }}\n          >\n            <TimeLine\n              handlePlayerSeekTo={handlePlayerSeekTo}\n              cardListForSelectDesktop={cardListForSelectDesktop.current}\n              currentCardAndTitleOnBigVideo={currentCardAndTitleOnBigVideo}\n              existsLocalSavedInArray_={existsLocalSavedInArray}\n              setExistsLocalSavedInArray_={setExistsLocalSavedInArray}\n              timeLineRefList={timeLineRefList.current}\n              existsLocalSeenInArray={existsLocalSeenInArray}\n            />\n          </div>\n        ) : (\n          <>\n            <div\n              style={{\n                justifyContent: \"center\",\n                display: \"flex\",\n                fontSize: \"1rem\",\n              }}\n            >\n              {currentCardAndTitleOnBigVideo && (\n                <span\n                  style={{ fontSize: 22 }}\n                  onClick={() => setOpenDrawer(true)}\n                >\n                  {currentCardAndTitleOnBigVideo!.card.title}\n                </span>\n              )}\n            </div>\n\n            <SwipeableDrawer\n              anchor=\"left\"\n              open={openDrawer}\n              onClose={() => setOpenDrawer(false)}\n              onOpen={() => setOpenDrawer(true)}\n            >\n              <div style={{ width: 350 }} role=\"presentation\"></div>\n              <TimeLine\n                handlePlayerSeekTo={handlePlayerSeekTo}\n                cardListForSelectDesktop={cardListForSelectDesktop.current}\n                currentCardAndTitleOnBigVideo={currentCardAndTitleOnBigVideo}\n                existsLocalSavedInArray_={existsLocalSavedInArray}\n                setExistsLocalSavedInArray_={setExistsLocalSavedInArray}\n                timeLineRefList={timeLineRefList.current}\n                existsLocalSeenInArray={existsLocalSeenInArray}\n              />\n            </SwipeableDrawer>\n          </>\n        )}\n        {topAppBarData!.youtubeId && (\n          <div\n            style={{\n              flexGrow: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <MyReactPlayer\n              listCardsWithCategories={listCardsWithCategories}\n              youtubeId={topAppBarData!.youtubeId}\n              currentCardIndex={currentCardIndex}\n              setExistsLocalSeenInArray={setExistsLocalSeenInArray}\n              currentCardIndexUpdateTime={currentCardIndexUpdateTime}\n              setCurrentCardAndTitleOnBigVideo={\n                setCurrentCardAndTitleOnBigVideo\n              }\n              playing={playing}\n              onReady={onReady}\n              onPause={onPause}\n              player={player}\n              timeLineRefList={timeLineRefList.current}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","import Grid from \"@material-ui/core/Grid\";\nimport { GeneralCard } from \"../../General/Cards/GeneralCard\";\nimport { CardBottomRight } from \"./CardBottom/CardBottomRight\";\n\nexport default function CardList(props) {\n  \n  let children = props.children;\n\n  return (\n    <Grid\n      id={\"card-list-\" + props.stackOfIds.join(\"-\")}\n      key={\"card-list-\" + props.stackOfIds.join(\"-\")}\n      container\n      direction=\"column\"\n      justify=\"flex-start\"\n      alignItems=\"stretch\"\n      spacing={1}\n    >\n      {Object.entries(children).map(\n        ([, card]) =>\n          undefined !== card && (\n            <Grid key={card.id} item>\n              <GeneralCard\n                cardId={card.id}\n                card={card}\n                title={card.title}\n                stackOfIds={props.stackOfIds}\n                newStackOfTitles={props.newStackOfTitles}\n                delCardHandler={props.delCardHandler}\n                cats={props.cats}\n                categoryTitle={props.categoryTitle}\n                collectionName={props.collectionName}\n                existsLocal={card.existsLocal}\n                stackOfLocalIds={card.stackOfLocalIds}\n                CardBottomRight={CardBottomRight}\n              />\n            </Grid>\n          )\n      )}\n    </Grid>\n  );\n}\n","import { SelectBoxWithCategories } from \"../../General/Navigation/SelectBoxWithCategories\";\n\nexport const TopTitleLists = (props) => {\n  if (undefined !== props.generalTitle) {\n    return props.generalTitle.map((title, id) => (\n      <SelectBoxWithCategories\n        key={id}\n        id={id}\n        title={title}\n        generalTitle={props.generalTitle}\n        generalTitleIds={props.generalTitleIds}\n        userCollection={props.userCollection}\n        kitCats={props.kitCats}\n      />\n    ));\n  }\n};\n","import React, { useEffect } from \"react\";\n\nimport { TopTitleLists } from \"./topTitleLists\";\nimport Container from \"@material-ui/core/Container\";\nimport { MoveOnScrollAppBar } from \"./MoveOnScrollAppBar\";\nimport { useTopTitleListsAppBarObserver } from \"../../General/Navigation/useTopTitleListsAppBarObserver\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useDrawerWithMenu } from \"../../General/DrawerWithMenu/Context/Drawer\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { useLocalForage } from \"../../DataSource/localForageContext\";\nimport { useCardsNumberInUserCollection } from \"../../General/Context/CardsNumberInUserCollectionContext\";\n\nexport const TopTitleListsAppBar = (props) => {\n  const store = useLocalForage();\n  const cardsNumberInUserCollection = useCardsNumberInUserCollection();\n\n  const [generalTitle, generalTitleIds] = useTopTitleListsAppBarObserver(\n    props.visibleChunks,\n    props.chunkRefs\n  );\n  const [invisible, setInvisible] = React.useState(true);\n\n  useEffect(() => {\n    store.settings\n      .getItem(\"cardsNumberCurrent\")\n      .then(function (cardsNumberCurrent) {\n        \n        if (cardsNumberCurrent > 0 && invisible === true) {\n          setInvisible(false);\n        } else if (cardsNumberCurrent === 0 && invisible === false) {\n          setInvisible(true);\n        }\n      });\n  }, [store.settings, invisible, cardsNumberInUserCollection]);\n\n  const drawerWithMenu = useDrawerWithMenu();\n  let visibleChunks = [...new Set(props.visibleChunks)];\n\n  return (\n    <MoveOnScrollAppBar\n      visibleChunks={visibleChunks}\n      generalTitle={generalTitle}\n    >\n      <Container maxWidth=\"sm\" style={{ paddingLeft: 8, paddingRight: 8 }}>\n        <Grid\n          container\n          justify=\"space-between\"\n          alignItems=\"center\"\n          style={{ flexWrap: \"unset\", height: 48 }}\n        >\n          <Grid item style={{ overflowX: \"auto\", display: \"flex\" }}>\n            <TopTitleLists\n              generalTitle={generalTitle}\n              generalTitleIds={generalTitleIds}\n              userCollection={props.userCollection}\n              kitCats={props.kitCats} \n            />\n          </Grid>\n          <div id=\"show-drawer-with-menu\">\n            <Grid item>\n              <Badge color=\"secondary\" variant=\"dot\" invisible={invisible}>\n                <MenuIcon onClick={() => drawerWithMenu.show()} />\n              </Badge>\n            </Grid>\n          </div>\n        </Grid>\n      </Container>\n    </MoveOnScrollAppBar>\n  );\n};\n","import {\n  makeStyles, useTheme\n} from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport { useCallback, useEffect, useReducer, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"../App.css\";\nimport { useStoreUserCollectionToServer } from \"../DataSource/Context/StoreUserCollectionToServer\";\nimport { useGetCollectionChunkHeight } from \"../DataSource/getCollectionChunkHeight\";\nimport { useGetDocFromLocalForage } from \"../DataSource/getLocalCollection\";\nimport { useLocalForage } from \"../DataSource/localForageContext\";\nimport { useFetch } from \"../DataSource/useFetch\";\nimport { useFireBaseAuth } from \"../General/Autorization/Context/FireBase\";\nimport { useChunksFromObserver } from \"../General/Chunks/useChunksFromObserver\";\nimport { useCardsNumberInUserCollection } from \"../General/Context/CardsNumberInUserCollectionContext\";\nimport { useComponentSizes } from \"../General/Context/ComponentSizesContext\";\nimport { useHashChange } from \"../General/Context/HashChangeContext\";\nimport { useHashInInitialUrl } from \"../General/Context/HashInInitialUrlContext\";\nimport { useShowSignInBar } from \"../General/Context/ShowSignInBarContext\";\nimport { useWindowWidth } from \"../General/Context/WindowWidthContext\";\nimport { GenerateCardList2 } from \"../General/GenerateCardList2\";\nimport { generateChunks } from \"../General/generateChunks\";\nimport { SkeletonLoaderForHashNavigation } from \"../General/Navigation/SkeletonLoaderForHashNavigation\";\nimport { useScrollTo } from \"../General/Navigation/useScrollTo\";\nimport { NAV_BAR_HEIGHT } from \"../General/Navigation/useTopTitleListsAppBarStyles\";\nimport { TopTabsMenuSkeleton } from \"../General/TopTabsMenuSkeleton\";\nimport { CollectionLoader } from \"../Loader/collection\";\nimport { getCategoriesService } from \"../MyCollection/Categories/Service/getCategories\";\nimport \"../skeleton.css\";\nimport { cardAndCategoryInterface } from \"./cardAndCategoryInterface\";\nimport CardList from \"./Cards/CardList\";\nimport { addIntersectionsWithLocal } from \"./Cards/Service/addIntersectionsWithLocal\";\nimport { collectionHeader } from \"./collectionHeaderInterface\";\nimport { TopAppBar } from \"./Navigation/TopAppBar\";\nimport { TopTitleListsAppBar } from \"./Navigation/TopTitleListsAppBar\";\nimport { getLocalIds } from \"./Service/getLocalIds\";\nimport { navigationToUrlStackOfTitles } from \"./Service/navigationToUrlStackOfTitles\";\n\nlet newCardList: any[] = [];\nexport default function CardsCollection(props: any) {\n  let { user, kit, collectionId } =\n    useParams<Record<string, string | undefined>>();\n  const [existsLocalSavedInArray, setExistsLocalSavedInArray] = useState<any[]>(\n    []\n  );\n  const [existsLocalSeenInArray, setExistsLocalSeenInArray] = useState<any[]>(\n    []\n  );\n  const [player, setPlayer] = useState<any>();\n  const [playing, setPlaying] = useState<any>(true);\n  const theme = useTheme();\n  const [openDrawer, setOpenDrawer] = useState<any>(false);\n  const timeLineRefList = useRef<any[]>([]);\n  const chunkRefs = useRef<any[]>([]);\n  const anchorRefs = useRef<any[]>([]);\n  const cardListForSelect = useRef<any[]>([]);\n  const cardListForSelectDesktop = useRef<any[]>([]);\n  const listCardsWithCategories = useRef<any[]>([]);\n  const userCollection = useRef<any>({});\n  const store = useLocalForage();\n  const [setedUp, setup] = useState(false);\n  const currentCardIndex = useRef(-1);\n  const currentCardIndexUpdateTime = useRef(new Date());\n  const [currentCardAndTitleOnBigVideo, setCurrentCardAndTitleOnBigVideo] =\n    useState<cardAndCategoryInterface>();\n  //const [collection, setCollection] = useState({});\n  const [kitCats, setKitCats] = useState({});\n  const [topAppBarData, setTopAppBarData] = useState<collectionHeader>();\n  const data = props.data;\n  const storeUserCollectionToServer = useStoreUserCollectionToServer();\n  const cardsNumberInUserCollection = useCardsNumberInUserCollection();\n  const fireBaseAuth = useFireBaseAuth();\n  const [, render] = useReducer((p) => !p, false);\n  const [dataKit, loadingKit] = useFetch(\"/\" + user + \"-\" + kit + \".json\");\n  const [urlStackOfTitles, setUrlStackOfTitles] = useState({});\n\n  const [localData, localLoading] = useGetDocFromLocalForage(\"doc\");\n  const [localCollectionChunkHeight, localCollectionChunkHeightLoading] =\n    useGetCollectionChunkHeight(collectionId);\n  const [chunks, setChunks] = useState<any[]>([]);\n  const titleToChunkMathing = useRef<any[]>([]);\n  const isObserverSetedUp = useRef(false);\n  // const hashChanged = useHashChange();\n  const showSignInBar = useShowSignInBar();\n\n  const componentSizes = useComponentSizes();\n  const hashInInitialUrl = useHashInInitialUrl();\n  const hashChange = useHashChange();\n\n  const windowWidth = useWindowWidth();\n\n  const [scrollMargin, setScrollMargin] = useState(\n    showSignInBar.status === false\n      ? componentSizes.topTitleListsAppBarHeight\n      : componentSizes.topTitleListsAppBarHeight +\n          componentSizes.topSignInAppBarHeight\n  );\n\n  useEffect(() => {\n    return () => {\n      hashChange.setHash(\"\");\n      hashInInitialUrl.reset();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (showSignInBar.status === false) {\n      setScrollMargin(componentSizes.topTitleListsAppBarHeight);\n    } else {\n      setScrollMargin(\n        componentSizes.topTitleListsAppBarHeight +\n          componentSizes.topSignInAppBarHeight\n      );\n    }\n  }, [showSignInBar.status, componentSizes.topSignInAppBarHeight]);\n\n  useEffect(() => {\n    if (localLoading || loadingKit) {\n      return;\n    }\n\n    if (Object.keys(dataKit).length > 0) {\n      let urlStackOfTitles = {};\n      let stackOfTitles: any;\n      navigationToUrlStackOfTitles(\n        dataKit.navigation,\n        stackOfTitles,\n        urlStackOfTitles\n      );\n      setUrlStackOfTitles(urlStackOfTitles);\n    }\n\n    let cats: any[] = [];\n\n    let listCards: any[] = [];\n\n    let listCardsWithCategories_: any[] = [];\n\n    if (Object.keys(data).length > 0) {\n      if (process.env.REACT_APP_DEBUG)\n        console.log(\"dataKit.navigation\", dataKit.navigation);\n      setKitCats(dataKit.navigation);\n\n      userCollection.current = data;\n      //collection = JSON.parse(JSON.stringify(data));\n\n      getCategoriesService(userCollection.current.children, 0, [], cats);\n\n      addIntersectionsWithLocal(\n        userCollection.current.children,\n        localData,\n        collectionId\n      );\n\n      let localInxedColection = -1;\n      if (localData) {\n        localInxedColection = localData.findIndex(\n          (e: any) => e.title === userCollection.current.children[0].title\n        );\n      }\n      if (process.env.REACT_APP_DEBUG)\n        console.log(\n          \"localData\",\n          localData,\n          userCollection.current.children[0].title,\n          localInxedColection\n        );\n\n      let listOfSavedIds_: any[] = [];\n      let listOfSeenIds_: any[] = [];\n      if (localData) {\n        getLocalIds(localData, listOfSavedIds_, listOfSeenIds_);\n      }\n      setExistsLocalSavedInArray(listOfSavedIds_);\n      setExistsLocalSeenInArray(listOfSeenIds_);\n\n      let cardListForSelect_: any[] = [];\n      let cardListForSelectDesktop_: any[] = [];\n      GenerateCardList2(\n        userCollection.current.children,\n        [],\n        [],\n        [],\n        listCards,\n        listCardsWithCategories_,\n        cats,\n        collectionId,\n        cardListForSelect_,\n        cardListForSelectDesktop_,\n        true,\n        localInxedColection\n      );\n      cardListForSelect.current = cardListForSelect_;\n      cardListForSelectDesktop.current = cardListForSelectDesktop_;\n      if (process.env.REACT_APP_DEBUG)\n        console.log(\n          \"cardListForSelectDesktop.current\",\n          cardListForSelectDesktop.current\n        );\n\n      newCardList = listCards;\n      listCardsWithCategories.current = listCardsWithCategories_;\n\n      setup(true);\n\n      //setCollection(collection.children);\n\n      setTopAppBarData({\n        id: userCollection.current.id,\n        url: userCollection.current.url,\n        title: userCollection.current.title,\n        cards: userCollection.current.cards,\n        createdAt: userCollection.current.createdAt,\n        logo: userCollection.current.logo,\n        youtubeId: userCollection.current.youtubeId,\n        author: userCollection.current.author,\n        source: userCollection.current.source,\n        bookmarks: userCollection.current.bookmarks,\n        description: userCollection.current.description,\n      });\n      let [chunks_, titleToChunkMathing_] = generateChunks(\n        newCardList,\n        CardList,\n        anchorRefs,\n        scrollMargin\n      );\n      titleToChunkMathing.current = titleToChunkMathing_;\n\n      setChunks(chunks_);\n    }\n  }, [data, localData, localLoading, loadingKit, collectionId, scrollMargin]);\n\n  const onPause = useCallback(() => {\n    setPlaying(false);\n  }, [\n    currentCardAndTitleOnBigVideo,\n    currentCardIndex,\n    listCardsWithCategories,\n  ]);\n\n  const handlePlayerSeekTo = (cardId: any) => {\n    let currentcardIndex_ = listCardsWithCategories.current.findIndex(\n      (elem) => elem.card.id == cardId\n    );\n    player.seekTo(\n      listCardsWithCategories.current[currentcardIndex_].card.start\n    );\n    currentCardIndex.current = currentcardIndex_;\n    currentCardIndexUpdateTime.current = new Date();\n    setCurrentCardAndTitleOnBigVideo(\n      listCardsWithCategories.current[currentCardIndex.current]\n    );\n    setPlaying(true);\n  };\n\n  const handleBefore = () => {\n    player.seekTo(\n      listCardsWithCategories.current[currentCardIndex.current - 1].card.start\n    );\n    setCurrentCardAndTitleOnBigVideo(\n      listCardsWithCategories.current[currentCardIndex.current - 1]\n    );\n    currentCardIndex.current--;\n\n    setPlaying(true);\n  };\n  const handleNext = () => {\n    player.seekTo(\n      listCardsWithCategories.current[currentCardIndex.current + 1].card.start\n    );\n\n    setCurrentCardAndTitleOnBigVideo(\n      listCardsWithCategories.current[currentCardIndex.current + 1]\n    );\n    currentCardIndex.current++;\n\n    setPlaying(true);\n  };\n\n  let selectMaxWidth = 460;\n  if (windowWidth.width <= 350) {\n    selectMaxWidth = 100;\n  } else if (windowWidth.width <= 395) {\n    selectMaxWidth = 150;\n  } else if (windowWidth.width <= 455) {\n    selectMaxWidth = 200;\n  } else if (windowWidth.width <= 500) {\n    selectMaxWidth = 250;\n  } else if (windowWidth.width <= 660) {\n    selectMaxWidth = 300;\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      backgroundColor: \"#3a3a3a\",\n      overflow: \"auto\",\n      maxHeight: \"100%\",\n      color: \"white\",\n      maxWidth: 350,\n      position: \"relative\",\n    },\n    formControl: {\n      marginTop: 8 /* theme.spacing(1) */,\n      marginBottom: 8 /* theme.spacing(1) */,\n    },\n    select: {\n      \"& .MuiSelect-select:focus\": {\n        background: \"#12100e\" /* theme.palette.background.default */,\n        textDecoration: \"none\",\n      },\n      \"& .MuiSelect-select:hover\": {\n        background: \"#12100e\" /* theme.palette.background.default */,\n        textDecoration: \"underline\",\n      },\n      \"& .MuiSelect-iconOpen\": {\n        display: \"none\",\n      },\n      \"& .MuiSelect-icon\": {\n        display: \"none\",\n      },\n\n      \"& .MuiSelect-select\": {\n        paddingRight: 0,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        maxWidth: selectMaxWidth,\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n  useEffect(() => {}, [data]);\n  useEffect(() => {}, [localData]);\n  useEffect(() => {}, [collectionId]);\n  useEffect(() => {}, [scrollMargin]);\n  const onReady = (player: any) => {\n    //player.seekTo(card.start);\n    setPlayer(player);\n  };\n  const [visibleChunks, chunksForRender, scrollTo] = useChunksFromObserver(\n    chunks,\n    store,\n    collectionId,\n    chunkRefs,\n    isObserverSetedUp,\n    localCollectionChunkHeight,\n    titleToChunkMathing,\n    localLoading,\n    localCollectionChunkHeightLoading,\n    setedUp\n  );\n\n  useScrollTo(scrollTo, anchorRefs, scrollMargin, chunksForRender);\n\n  if (\n    loadingKit ||\n    localLoading ||\n    localCollectionChunkHeightLoading ||\n    setedUp === false ||\n    chunksForRender.length === 0\n  ) {\n    return (\n      <>\n        <TopAppBar />\n        <TopTabsMenuSkeleton />\n        <CollectionLoader />\n      </>\n    );\n  }\n\n  let playerDivHeight =\n    \"calc(100% - \" +\n    (componentSizes.topAppBarHeight +\n      (showSignInBar.status === true\n        ? componentSizes.topSignInAppBarHeight\n        : 0)) +\n    \"px)\";\n\n  let navigationBbColor =\n    theme.palette.type === \"dark\" ? theme.palette.background.paper : \"#3a3a3a\";\n\n  return (\n    <>\n      <TopAppBar topAppBarData={topAppBarData} />\n      <div\n        id=\"main\"\n        style={{\n          display: \"flex\",\n          flexDirection: windowWidth.width > 1024 ? \"row\" : \"column\",\n          height: playerDivHeight,\n        }}\n      >\n        <Container\n          maxWidth=\"sm\"\n          style={{\n            paddingLeft: 8,\n            paddingRight: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            marginTop: 10,\n          }}\n        >\n          <TopTitleListsAppBar\n            userCollection={userCollection.current}\n            cardList={newCardList}\n            visibleChunks={visibleChunks}\n            chunkRefs={chunkRefs}\n            kitCats={kitCats}\n          />\n\n          <div\n            id=\"firstCollectionTitleFix\"\n            style={{\n              position: \"absolute\",\n              height: NAV_BAR_HEIGHT + 10,\n              width: 1,\n            }}\n          />\n\n          <SkeletonLoaderForHashNavigation />\n          {chunksForRender.map((chunk_: any, key: any) => {\n            return (\n              <div\n                key={key}\n                id={\"chunk-\" + key}\n                ref={(r) => {\n                  //\n                  return (chunkRefs.current[key] = r);\n                }}\n                style={{\n                  backgroundColor: theme.palette.background.default,\n                }}\n              >\n                {chunk_}\n              </div>\n            );\n          })}\n        </Container>\n      </div>\n    </>\n  );\n}\n","import { useParams } from \"react-router\";\nimport { useFetch } from \"../DataSource/useFetch\";\nimport { TopAppBar } from \"./Navigation/TopAppBar\";\nimport { TopTabsMenuSkeleton } from \"../General/TopTabsMenuSkeleton\";\nimport { CollectionLoader } from \"../Loader/collection\";\nimport YoutubeVideo from \"./YoutubeVideo\";\nimport CardsCollection from \"./CardsCollection\";\n\nexport default function Selector(props: any) {\n  let { user, kit, collectionId } =\n    useParams<Record<string, string | undefined>>();\n  const [data, loading] = useFetch(\n    \"/\" + user + \"-\" + kit + \"-\" + collectionId + \".json\"\n  );\n  if (loading) {\n    return (\n      <>\n        <TopAppBar />\n        <TopTabsMenuSkeleton />\n        <CollectionLoader />\n      </>\n    );\n  } else {\n    if (data.youtubeId) {\n      return <YoutubeVideo data={data} collectionId={collectionId} />;\n    } else {\n      return <CardsCollection data={data} />;\n    }\n  }\n}\n"],"sourceRoot":""}