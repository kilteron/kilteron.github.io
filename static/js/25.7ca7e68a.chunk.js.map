{"version":3,"sources":["firebase.config.js","InitUpdate.js","../node_modules/@use-it/interval/dist/index.js","../../src/index.tsx"],"names":["config","apiKey","projectId","databaseURL","authDomain","storageBucket","messagingSenderId","clientId","scopes","discoveryDocs","InitUpdate","windowWidth","useWindowWidth","windowHeight","useWindowHeight","componentSizes","useComponentSizes","wheelDirection","useWheelDirection","isWindowInFocus","useIsWindowInFocus","isPageInTop","useIsPageInTop","pageYOffsetPrev","useRef","innerHeightPrev","innerWidthPrev","windowWasFocusedNow","hashWasChangedNow","fireBaseAuth","useFireBaseAuth","googleApiAuth","useGoogleApiAuth","topTranformerTrigger","useTopTranformerTrigger","firebase","apps","length","initializeApp","updateSize","useCallback","width","window","innerWidth","setWidth","updatedWidth","height","innerHeight","setHeight","useLayoutEffect","addEventListener","removeEventListener","windowInFocus","e","status","focus","current","windowWasFocusedNowTimer","windowInBlur","blur","console","log","auth","onAuthStateChanged","user","providerData","signIn","uid","signOut","err","alert","a","loadAuth2","gapi","process","auth2","isSignedIn","get","currentUser","listen","setAuth2","error","hashWasChangedNowTimer","useInterval","pageYOffset","direction","setDirection","on","notTop","top","module","exports","require","callback","delay","savedCallbackRef","useEffect","intervalId","setInterval","clearInterval"],"mappings":"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","file":"static/js/25.7ca7e68a.chunk.js","sourcesContent":["export const config = {\n  apiKey: \"AIzaSyAht_0D1BWkjcl2WswnwnhmfsdiBuLf0QU\",\n  projectId: \"kymano-8015c\",\n  databaseURL: \"DATABASE_URL\",\n  authDomain: \"kymano-8015c.firebaseapp.com\",\n  // OPTIONAL\n  storageBucket: \"STORAGE_BUCKET\",\n  messagingSenderId: \"MESSAGING_SENDER_ID\",\n  clientId:\n    \"933748353169-0umu7ffde4j9t3ukeunn71m9rh38lhui.apps.googleusercontent.com\",\n  scopes: [\n    \"email\",\n    \"profile\",\n    \"https://www.googleapis.com/auth/youtube.readonly\",\n  ],\n  discoveryDocs: [\n    \"https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest\",\n  ],\n};\n","import { useLayoutEffect, useCallback, useRef } from \"react\";\nimport useInterval from \"@use-it/interval\";\nimport { useWindowWidth } from \"./General/Context/WindowWidthContext\";\nimport { useWindowHeight } from \"./General/Context/WindowHeightContext\";\nimport { useComponentSizes } from \"./General/Context/ComponentSizesContext\";\nimport { useWheelDirection } from \"./General/Context/WheelDirectionContext\";\nimport { useIsWindowInFocus } from \"./General/Context/IsWindowInFocusContext\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { useFireBaseAuth } from \"./General/Autorization/Context/FireBase\";\nimport { useGoogleApiAuth } from \"./General/Autorization/Context/GoogleApi\";\nimport { useTopTranformerTrigger } from \"./General/Context/TopTranformerTriggerContext\";\nimport { config } from \"./firebase.config\";\nimport { useIsPageInTop } from \"./General/Context/IsPageInTopContext\";\nimport { gapi, loadAuth2 } from \"gapi-script\";\n\nexport default function InitUpdate() {\n  const windowWidth = useWindowWidth();\n  const windowHeight = useWindowHeight();\n  const componentSizes = useComponentSizes();\n  const wheelDirection = useWheelDirection();\n  //const hashChange = useHashChange();\n  const isWindowInFocus = useIsWindowInFocus();\n  const isPageInTop = useIsPageInTop();\n  const pageYOffsetPrev = useRef();\n  const innerHeightPrev = useRef();\n  const innerWidthPrev = useRef();\n  const windowWasFocusedNow = useRef(false);\n  const hashWasChangedNow = useRef(false);\n  const fireBaseAuth = useFireBaseAuth();\n  const googleApiAuth = useGoogleApiAuth();\n  const topTranformerTrigger = useTopTranformerTrigger();\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp({ ...config });\n  }\n  /*   if (gapi.client && !gapi.client.length) {\n    gapi.client.init({\n      client_id: config.clientId,\n      discoveryDocs: config.discoveryDocs,\n      scope: config.scopes.join(\" \"),\n    });\n    \n  } */\n\n  const updateSize = useCallback(() => {\n    if (windowWidth.width !== window.innerWidth) {\n      windowWidth.setWidth(window.innerWidth);\n      componentSizes.updatedWidth(window.innerWidth);\n    }\n    if (windowHeight.height !== window.innerHeight) {\n      windowHeight.setHeight(window.innerHeight);\n    }\n  }, [windowWidth, windowHeight, componentSizes]);\n\n  useLayoutEffect(() => {\n    window.addEventListener(\"resize\", updateSize);\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, [updateSize]);\n\n  /*   const updateHash = useCallback(\n    (e) => {\n      const url = e.newURL.split(\"#\");\n      const hash = url[url.length - 1];\n      if (hashChange.hash !== hash) {\n        hashChange.setHash(hash);\n        hashWasChangedNow.current = true;\n        hashWasChangedNowTimer = 0;\n      }\n    },\n    [hashChange]\n  ); */\n\n  /* useLayoutEffect(() => {\n    window.addEventListener(\"hashchange\", updateHash);\n\n    return () => window.removeEventListener(\"hashchange\", updateHash);\n  }, [updateHash]); */\n\n  const windowInFocus = useCallback(\n    (e) => {\n      if (isWindowInFocus.status === false) {\n        isWindowInFocus.focus();\n        windowWasFocusedNow.current = true;\n        windowWasFocusedNowTimer = 0;\n      }\n    },\n    [isWindowInFocus.status]\n  );\n\n  const windowInBlur = useCallback(\n    (e) => {\n      if (isWindowInFocus.status === true) {\n        isWindowInFocus.blur();\n      }\n    },\n    [isWindowInFocus]\n  );\n\n  useLayoutEffect(() => {\n    window.addEventListener(\"focus\", windowInFocus);\n\n    return () => window.removeEventListener(\"focus\", windowInFocus);\n  }, [windowInFocus]);\n\n  useLayoutEffect(() => {\n    window.addEventListener(\"blur\", windowInBlur);\n\n    return () => window.removeEventListener(\"blur\", windowInBlur);\n  }, [windowInBlur]);\n\n  useLayoutEffect(() => {\n    if (process.env.REACT_APP_DEBUG) console.log(\"InitUpdate useLayoutEffect\");\n\n    //let app = firebase.initializeApp({ ...config });\n    try {\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (process.env.REACT_APP_DEBUG) console.log(\"onAuthStateChanged\");\n\n        if (user && user.providerData && user.providerData[0]) {\n          if (process.env.REACT_APP_DEBUG) console.log(\"fireBaseAuth.signIn\");\n          fireBaseAuth.signIn(user.providerData[0], user.uid);\n          // Make sure there is a valid user object\n          /*  gapi.load(\"client\", () => {\n            console.log(\n              \"loaded client\",\n              config.clientId,\n              config.scopes.join(\" \")\n            );\n            gapi.client.init({\n              client_id: config.clientId,\n              discoveryDocs: config.discoveryDocs,\n              scope: config.scopes.join(\" \"),\n            }); */\n          /* .then(() => {\n                console.log(\"loaded\");\n                const googleAuth = gapi.auth2.getAuthInstance();\n                 googleAuth\n                  .signIn()\n                  .then(() => {\n                    return gapi.client.load(\"youtube\", \"v3\");\n                  })\n                  .then(() => {\n                    return gapi.client.youtube.videos.list({\n                      myRating: \"like\",\n                      prettyPrint: true,\n                    });\n                  })\n                  .then((resp) => {\n                    console.log(resp);\n                  }); \n              }); */\n          // });\n\n          /* \n          var script = document.createElement(\"script\");\n          script.type = \"text/javascript\";\n          script.src = \"https://apis.google.com/js/api.js\";\n          // Once the Google API Client is loaded, you can run your code\n          script.onload = function (e) {\n            // Initialize the Google API Client with the config object\n            gapi.client\n              .init({\n                apiKey: config.apiKey,\n                clientId: config.clientID,\n                discoveryDocs: config.discoveryDocs,\n                scope: config.scopes.join(\" \"),\n              })\n              // Loading is finished, so start the app\n              .then(() => {\n                return gapi.client.load(\"youtube\", \"v3\");\n              })\n              .then(() => {\n                console.log(\"ok\", gapi.client.youtube);\n              })\n              .then(() => {\n                \n              })\n              .then(() => {\n              });\n          };\n          // Add to the document\n          document.getElementsByTagName(\"head\")[0].appendChild(script); */\n        } else {\n          fireBaseAuth.signOut();\n        }\n      });\n    } catch (err) {\n      alert(\"Error1... Please try again.\");\n    }\n\n    try {\n      const setAuth2 = async () => {\n        const auth2 = await loadAuth2(\n          gapi,\n          process.env.REACT_APP_CLIENT_ID,\n          process.env.REACT_APP_SCOPE\n        );\n        if (process.env.REACT_APP_DEBUG) console.log(\"auth2\", auth2);\n\n        if (auth2.isSignedIn.get()) {\n          googleApiAuth.signIn();\n          if (process.env.REACT_APP_DEBUG)\n            console.log(\"auth2.currentUser:\", auth2.currentUser.get());\n        } else {\n          if (process.env.REACT_APP_DEBUG) console.log(\"FALSE\");\n          //attachSignin(document.getElementById(\"customBtn\"), auth2);\n        }\n        auth2.isSignedIn.listen((isSignedIn) => {\n          if (process.env.REACT_APP_DEBUG)\n            console.log(\"isSignedIn\", isSignedIn);\n          if (isSignedIn) {\n            googleApiAuth.signIn();\n          } else {\n            googleApiAuth.signOut();\n          }\n        });\n      };\n      setAuth2();\n      /* gapi.load(\"client\", () => {\n        console.log(\"loaded client\");\n        gapi.client.init({\n          client_id:\n            \"933748353169-0umu7ffde4j9t3ukeunn71m9rh38lhui.apps.googleusercontent.com\",\n          discovery_docs: [\n            \"https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest\",\n          ],\n          scope:\n            \"email profile https://www.googleapis.com/auth/youtube.readonly\",\n        });\n      }); \n\n      const auth2 = gapi.auth2.getAuthInstance();\n      auth2.isSignedIn.listen((isSignedIn) => {\n        if (process.env.REACT_APP_DEBUG) console.log(\"isSignedIn\", isSignedIn);\n        if (isSignedIn) {\n          googleApiAuth.signIn();\n        } else {\n          googleApiAuth.signOut();\n        }\n      }); */\n    } catch (error) {\n      if (process.env.REACT_APP_DEBUG) console.log(\"error\", error);\n      alert(\"Error2... Please try again.\");\n    }\n  }, []);\n\n  var windowWasFocusedNowTimer = 0;\n  var hashWasChangedNowTimer = 0;\n  useInterval(() => {\n    if (isWindowInFocus.status === false) {\n      return;\n    }\n\n    if (windowWasFocusedNow.current === true) {\n      if (windowWasFocusedNowTimer < 4) {\n        windowWasFocusedNowTimer++;\n      } else {\n        windowWasFocusedNow.current = false;\n      }\n    }\n\n    if (hashWasChangedNow.current === true) {\n      if (hashWasChangedNowTimer < 4) {\n        hashWasChangedNowTimer++;\n      } else {\n        hashWasChangedNow.current = false;\n      }\n    }\n\n    if (\n      windowWasFocusedNow.current === false &&\n      hashWasChangedNow.current === false &&\n      ((pageYOffsetPrev.current - window.pageYOffset < -20 &&\n        wheelDirection.direction !== \"down\") ||\n        (innerHeightPrev.current < window.innerHeight &&\n          innerWidthPrev.current === window.innerWidth))\n    ) {\n      wheelDirection.setDirection(\"down\");\n    } else if (\n      windowWasFocusedNow.current === false &&\n      hashWasChangedNow.current === false &&\n      ((pageYOffsetPrev.current - window.pageYOffset > 20 &&\n        wheelDirection.direction !== \"up\") ||\n        (innerHeightPrev.current > window.innerHeight &&\n          innerWidthPrev.current === window.innerWidth))\n    ) {\n      wheelDirection.setDirection(\"up\");\n      topTranformerTrigger.on();\n    }\n    if (window.pageYOffset > 0) {\n      isPageInTop.notTop();\n    } else {\n      isPageInTop.top();\n    }\n\n    pageYOffsetPrev.current = window.pageYOffset;\n    innerHeightPrev.current = window.innerHeight;\n    innerWidthPrev.current = window.innerWidth;\n  }, 500);\n\n  return <></>;\n}\n","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./interval.cjs.production.min.js')\n} else {\n  module.exports = require('./interval.cjs.development.js')\n}\n","import { useEffect, useRef } from 'react';\n\ntype Delay = number | null;\ntype TimerHandler = (...args: any[]) => void;\n\nconst useInterval = (callback: TimerHandler, delay: Delay) => {\n  const savedCallbackRef = useRef<TimerHandler>();\n\n  useEffect(() => {\n    savedCallbackRef.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const handler = (...args: any[]) => savedCallbackRef.current!(...args);\n\n    if (delay !== null) {\n      const intervalId = setInterval(handler, delay);\n      return () => clearInterval(intervalId);\n    }\n  }, [delay]);\n};\n\nexport default useInterval;\n"],"sourceRoot":""}