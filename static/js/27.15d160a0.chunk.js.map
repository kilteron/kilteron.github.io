{"version":3,"sources":["../node_modules/react-scripts/node_modules/webpack/buildin/global.js","../node_modules/localforage/dist/localforage.js"],"names":["g","this","Function","e","window","module","exports","t","n","r","s","o","u","i","f","Error","code","l","call","length","1","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","immediate","task","push","self","2","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","reject","resolve","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","tryToUnwrap","result","tryCatch","status","out","reason","all","iterable","Object","prototype","toString","values","Array","resolved","allResolver","resolveFromAll","outValue","error","race","response","constructor","3","4","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","open","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","name","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","target","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","undefined","tx","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","req","get","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","store","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","dbPromise","deleteObjectStore","_forage2","deleteDatabase","onblocked","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","c","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","isNaN","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","localforage_js","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance"],"mappings":"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","file":"static/js/27.15d160a0.chunk.js","sourcesContent":["var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.9.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n"],"sourceRoot":""}